
package GUI;

import Database.VirtualPetDatabase;
import static GUI.StartupForm.database;
import static GUI.StartupForm.newGame;
import static GUI.StartupForm.startFrame;
import Pet.Dog;
import Pet.Pet;
import World.Owner;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Akansha Sen
 */
public class NewGameGUI extends javax.swing.JFrame {

    public static JFrame newGameFrame = new JFrame("Create a New Game!");
    private static ActiveGame petGameGUI;
    private VirtualPetDatabase database;
    
    /**
     * Creates new form NewGameForm
     */
    public NewGameGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        ownerNameTextfield = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        genderTextfield = new javax.swing.JTextField();
        dogNameLabel = new javax.swing.JLabel();
        petNameTextfield = new javax.swing.JTextField();
        startGameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        nameLabel.setText("Name");

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("Please enter the details below to Start a New Game");

        genderLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        genderLabel.setText("Gender");

        dogNameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dogNameLabel.setText("Dog Name");

        startGameButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startGameButton.setText("Start Game!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 55, Short.MAX_VALUE)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dogNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(petNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genderLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(genderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel)
                                .addGap(113, 113, 113)
                                .addComponent(ownerNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(startGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(nameLabel))
                    .addComponent(ownerNameTextfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(genderLabel)
                    .addComponent(genderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dogNameLabel)
                    .addComponent(petNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(startGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        
        

        startGameButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                if(ownerNameTextfield.getText().isEmpty() || genderTextfield.getText().isEmpty() || petNameTextfield.getText().isEmpty() ||
                        ownerNameTextfield.getText().trim().length() > 0 || genderTextfield.getText().trim().length() > 0 
                        || petNameTextfield.getText().trim().length() > 0){
                    JOptionPane.showMessageDialog(null,"ONE OF THE FIELDS IS EMPTY!","Empty Field!",JOptionPane.ERROR_MESSAGE);
                }
                else if(genderTextfield.getText().length() > 1 ){
                    JOptionPane.showMessageDialog(null,"GENDER HAS TO BE 'F', 'M' or 'O'!","Invalid Gender!",JOptionPane.ERROR_MESSAGE);
                    
                }else if(genderTextfield.getText().length() == 1 ){
                    char c = genderTextfield.getText().charAt(0);
                    if(c == ' ' || c != 'F' || c != 'f' || c != 'M'|| c != 'm' || c != 'O' || c != 'o' ){
                        JOptionPane.showMessageDialog(null,"GENDER HAS TO BE 'F', 'M' or 'O'!","Invalid Gender!",JOptionPane.ERROR_MESSAGE);
                    }
                }else if(JOptionPane.showConfirmDialog(null, "Is the details correct?","Confirm details",JOptionPane.YES_NO_OPTION)==0){
                    String ownerName = ownerNameTextfield.getText();
                    String gender = genderTextfield.getText();
                    String petName = petNameTextfield.getText();
                    
                    database.addToTable(ownerName,gender,petName);
                    
                    Owner newOwner = new Owner(ownerName,gender);
                    Pet newPet = new Dog(petName);
                    newOwner.setPet(newPet);
                    
                    newGameFrame.dispose();
                    newGameFrame.setVisible(false);
                    petGameGUI = new ActiveGame(newOwner,database);
                    petGameGUI.setVisible(true);
                    
                    petGameGUI.addWindowListener(new WindowAdapter() {
                        public void windowClosing(WindowEvent we) {  // close the database connection when frame closes
                            database.closeDatabase();
                            System.exit(0);
                        }
                    });
                }
            }
        });
        
        pack();
    }// </editor-fold>                        

    public void setDatabase(VirtualPetDatabase database){
        this.database = database;
    }
    
    // Variables declaration               
    private javax.swing.JLabel dogNameLabel;
    private javax.swing.JTextField petNameTextfield;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField genderTextfield;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField ownerNameTextfield;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel title;
    // End of variables declaration                   
}
